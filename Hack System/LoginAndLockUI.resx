<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="HeadPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>